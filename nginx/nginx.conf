# Nginx configuration for microservices gateway

events {
    worker_connections 1024;
}

# Main HTTP block
http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Access and error logs
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Upstream for user-service
    upstream user_service {
        server user-service:3001;
        keepalive 32;
    }
    
    # Upstream for product-service
    upstream product_service {
        server product-service:3002;
        keepalive 32;
    }
    
    # Upstream for order-service
    upstream order_service {
        server order-service:3003;
        keepalive 32;
    }
    
    # Upstream for notification-service
    upstream notification_service {
        server notification-service:3004;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API documentation endpoint
        location /api/docs {
            proxy_pass http://user_service/api/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /auth requests to user-service
        location /api/v1/auth {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://user_service/api/v1/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Route /users requests to user-service
        location /api/v1/users {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://user_service/api/v1/users;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Route /products requests to product-service
        location /api/v1/products {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://product_service/api/v1/products;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Route /orders requests to order-service
        location /api/v1/orders {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://order_service/api/v1/orders;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Route /notifications requests to notification-service
        location /api/v1/notifications {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://notification_service/api/v1/notifications;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Catch-all for unmatched API routes
        location /api/ {
            return 404 '{"success":false,"message":"API endpoint not found","error":{"code":"ENDPOINT_NOT_FOUND"},"meta":{"timestamp":"'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'","version":"1.0.0"}}';
            add_header Content-Type application/json;
        }

        # Default location
        location / {
            return 200 '{"success":true,"message":"Microservices Gateway","data":{"services":["user-service","product-service","order-service","notification-service"],"version":"1.0.0"},"meta":{"timestamp":"'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'","version":"1.0.0"}}';
            add_header Content-Type application/json;
        }
    }
}
